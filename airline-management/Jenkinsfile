pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'maven:3.8.6-eclipse-temurin-17'
        AWS_EC2_HOST = 'ec2-3-15-235-93.us-east-2.compute.amazonaws.com'
        AWS_EC2_USER = 'ec2-user'
        AWS_EC2_KEY = credentials('ec2-key')
        JAR_FILE = 'target/airline-management-0.0.1-SNAPSHOT.jar'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    docker.image('maven:3.8.6-eclipse-temurin-17').inside {
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    docker.image('maven:3.8.6-eclipse-temurin-17').inside {
                        sh 'mvn test'
                    }
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-key']) {
                    sh """
                        scp -o StrictHostKeyChecking=no ${JAR_FILE} ${AWS_EC2_USER}@${AWS_EC2_HOST}:/home/${AWS_EC2_USER}/app/
                    """
                }
            }
        }

        stage('Start Application') {
            steps {
                sshagent(['ec2-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${AWS_EC2_USER}@${AWS_EC2_HOST} '
                            # Kill any existing process using port 8080
                            fuser -k 8080/tcp || true
                            
                            # Start the application
                            nohup java -jar /home/${AWS_EC2_USER}/app/${JAR_FILE} > app.log 2>&1 &
                            
                            # Wait for application to start
                            sleep 30
                            
                            # Check if application is running
                            curl -f http://localhost:8080/actuator/health || exit 1
                        '
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
