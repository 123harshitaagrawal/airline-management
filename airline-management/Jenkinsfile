pipeline {
    agent any
    environment {
        AWS_REGION = 'us-east-2'
        EC2_HOST = '3.15.235.93'
        EC2_USER = 'ec2-user'
        SSH_KEY = credentials('ec2-ssh-key')
        JAR_NAME = 'airline-management-0.0.1-SNAPSHOT.jar'
        MAVEN_HOME = 'C:\\Users\\harsh\\apache-maven\\apache-maven-3.9.9'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/123harshitaagrawal/airline-management'
            }
        }
        stage('Build') {
            steps {
                dir('airline-management') {
                    bat "\"${MAVEN_HOME}\\bin\\mvn\" clean package -DskipTests"
                }
            }
        }
        stage('Test') {
            steps {
                dir('airline-management') {
                    bat "\"${MAVEN_HOME}\\bin\\mvn\" test"
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deploy to EC2') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                    dir('airline-management') {
                        bat """
                            icacls "%SSH_KEY%" /inheritance:r /grant:r "%USERNAME%:R"
                            scp -i "%SSH_KEY%" -o StrictHostKeyChecking=no target/%JAR_NAME% %EC2_USER%@%EC2_HOST%:/home/%EC2_USER%/app/app.jar
                        """
                    }
                }
            }
        }
        stage('Start Application') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                    dir('airline-management') {
                        bat """
                            icacls "%SSH_KEY%" /inheritance:r /grant:r "%USERNAME%:R"
                            ssh -i "%SSH_KEY%" -o StrictHostKeyChecking=no %EC2_USER%@%EC2_HOST% "pkill -f \\"java -jar\\" || true && nohup java -jar /home/%EC2_USER%/app/app.jar &"
                        """
                    }
                }
            }
        }
    }
    post {
        always {
            node('') {
                cleanWs()
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}